import ApiClient from '../ApiClient.js';


class {{classname}} {
{{#emitJSDoc}}	/**
	 * {{baseName}} service.
	 * @module {{#invokerPackage}}{{invokerPackage}}/{{/invokerPackage}}{{#apiPackage}}{{apiPackage}}/{{/apiPackage}}{{classname}}
	 * @version {{projectVersion}}
	 */

	/**
	 * Constructs a new {{classname}}. {{#description}}
	 * {{description}}{{/description}}
	 * @alias module:{{#invokerPackage}}{{invokerPackage}}/{{/invokerPackage}}{{#apiPackage}}{{apiPackage}}/{{/apiPackage}}{{classname}}
	 * @class
	 * @param {module:{{#invokerPackage}}{{invokerPackage}}/{{/invokerPackage}}ApiClient} apiClient Optional API client implementation to use,
	 * default to {@link module:{{#invokerPackage}}{{invokerPackage}}/{{/invokerPackage}}ApiClient#instance} if unspecified.
	 */{{/emitJSDoc}}
	constructor(apiClient) {
		this.apiClient = apiClient || ApiClient.instance;
	}

{{#operations}}{{#operation}}{{#emitJSDoc}}
	/**{{#summary}}
	 * {{summary}}{{/summary}}{{#notes}}
	 * {{notes}}{{/notes}}{{#allParams}}{{#required}}
	 * @param {{&vendorExtensions.x-jsdoc-type}} {{paramName}} {{description}}{{/required}}{{/allParams}}{{#hasOptionalParams}}
	 * @param {Object} opts Optional parameters{{#allParams}}{{^required}}
	 * @param {{&vendorExtensions.x-jsdoc-type}} opts.{{paramName}} {{description}}{{#defaultValue}} (default to {{.}}){{/defaultValue}}{{/required}}{{/allParams}}{{/hasOptionalParams}}
	 */{{/emitJSDoc}}
	{{nickname}}({{vendorExtensions.x-codegen-arg-list}}) { {{#hasOptionalParams}}
		opts = opts || {};
		{{/hasOptionalParams}}{{#allParams}}{{#required}}
		// verify the required parameter '{{paramName}}' is set
		if ({{paramName}} === undefined || {{paramName}} === null) {
			throw 'Missing the required parameter "{{paramName}}" when calling {{nickname}}';
		}{{/required}}{{/allParams}}

		return this.apiClient.callApi(
			'{{&path}}', 
			'{{httpMethod}}', 
			{ {{#pathParams}}'{{baseName}}': {{#required}}{{paramName}}{{/required}}{{^required}}opts['{{paramName}}']{{/required}}{{#hasMore}},{{/hasMore}}{{/pathParams}} }, 
			{ {{#queryParams}}'{{baseName}}': {{#collectionFormat}}this.apiClient.buildCollectionParam({{#required}}{{paramName}}{{/required}}{{^required}}opts['{{paramName}}']{{/required}}, '{{collectionFormat}}'){{/collectionFormat}}{{^collectionFormat}}{{#required}}{{paramName}}{{/required}}{{^required}}opts['{{paramName}}']{{/required}}{{/collectionFormat}}{{#hasMore}},{{/hasMore}}{{/queryParams}} }, 
			{ {{#headerParams}}'{{baseName}}': {{#required}}{{paramName}}{{/required}}{{^required}}opts['{{paramName}}']{{/required}}{{#hasMore}},{{/hasMore}}{{/headerParams}} }, 
			{ {{#formParams}}'{{baseName}}': {{#collectionFormat}}this.apiClient.buildCollectionParam({{#required}}{{paramName}}{{/required}}{{^required}}opts['{{paramName}}']{{/required}}, '{{collectionFormat}}'){{/collectionFormat}}{{^collectionFormat}}{{#required}}{{paramName}}{{/required}}{{^required}}opts['{{paramName}}']{{/required}}{{/collectionFormat}}{{#hasMore}},{{/hasMore}}{{/formParams}} }, 
			{{#bodyParam}}{{#required}}{{paramName}}{{/required}}{{^required}}opts['{{paramName}}']{{/required}}{{/bodyParam}}{{^bodyParam}}null{{/bodyParam}}, 
			['PureCloud OAuth'], 
			[{{#consumes}}'{{mediaType}}'{{^-last}}, {{/-last}}{{/consumes}}],
			[{{#produces}}'{{mediaType}}'{{^-last}}, {{/-last}}{{/produces}}]{{^usePromises}},
			callback{{/usePromises}}
		);
	}
{{/operation}}{{/operations}}
}


export default {{classname}};